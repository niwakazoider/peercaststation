<!-- PeerCastStation, a P2P streaming servent.
Copyright (C) 2013 PROGRE (djyayutto@gmail.com)

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>. -->
<Window x:Class="PeerCastStation.WPF.Dialogs.UpdaterWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:wf="clr-namespace:System.Windows.Forms.Integration;assembly=windowsformsintegration"
        xmlns:ui="clr-namespace:PeerCastStation.UI;assembly=PeerCastStation.UI"
        xmlns:wpf="clr-namespace:PeerCastStation.WPF.Dialogs"
        Title="PeerCastStationのアップデート"
        Height="400" Width="540"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        ShowInTaskbar="False"
        WindowStartupLocation="CenterOwner" Loaded="Window_Loaded">
  <Window.Resources>
    <Style TargetType="Button">
      <Setter Property="Width"   Value="80"/>
      <Setter Property="Padding" Value="4"/>
      <Setter Property="Margin"  Value="5"/>
    </Style>
  </Window.Resources>
  <Grid Margin="5">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <TextBlock Grid.Row="0" Margin="5">
      <TextBlock.Style>
        <Style TargetType="TextBlock">
          <Style.Triggers>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Idle}">
              <Setter Property="Text" Value="新しいバージョンがあるか確認しています..."/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.NoUpdates}">
              <Setter Property="Text" Value="新しいバージョンはありません。最新版を使用中です"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.NewVersionFound}">
              <Setter Property="Text" Value="新しいバージョンがダウンロード可能です！"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Downloading}">
              <Setter Property="Text" Value="新しいバージョンがダウンロード可能です！"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Aborted}">
              <Setter Property="Text" Value="新しいバージョンがダウンロード可能です！"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Downloaded}">
              <Setter Property="Text" Value="新しいバージョンがダウンロード可能です！"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </TextBlock.Style>
    </TextBlock>
    <Border Grid.Row="1" Margin="5" BorderBrush="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" BorderThickness="1">
      <wf:WindowsFormsHost Name="FormsHost" DataContext="{Binding Descriptions}"/>
    </Border>
    <Grid Grid.Row="2">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <ProgressBar Grid.Column="0" Margin="8" Value="{Binding Path=Progress, Mode=OneWay}" Maximum="1.0">
        <ProgressBar.Style>
          <Style TargetType="ProgressBar">
            <Style.Triggers>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Checking}">
                <Setter Property="IsIndeterminate" Value="True"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ProgressBar.Style>
      </ProgressBar>
      <ComboBox Grid.Column="1" Margin="5" ItemsSource="{Binding Enclosures}" SelectedItem="{Binding SelectedEnclosure}">
        <ComboBox.ItemTemplate>
          <DataTemplate>
            <TextBlock>
              <TextBlock.Style>
                <Style TargetType="TextBlock">
                  <Setter Property="Text" Value="ZIP"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding InstallerType}" Value="{x:Static ui:InstallerType.Installer}">
                      <Setter Property="Text" Value="インストーラ"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding InstallerType}" Value="{x:Static ui:InstallerType.ServiceInstaller}">
                      <Setter Property="Text" Value="サービスインストーラ"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding InstallerType}" Value="{x:Static ui:InstallerType.ServiceArchive}">
                      <Setter Property="Text" Value="サービスZIP"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </TextBlock.Style>
            </TextBlock>
          </DataTemplate>
        </ComboBox.ItemTemplate>
      </ComboBox>
      <Button x:Name="UpdateButton" Grid.Column="2" Click="UpdateButton_Click" Width="140">
        <Button.Style>
          <Style TargetType="Button">
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin"  Value="5"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Idle}">
                <Setter Property="Content" Value="更新の確認"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Checking}">
                <Setter Property="Content" Value="中止"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.NoUpdates}">
                <Setter Property="Content" Value="更新の確認"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.NewVersionFound}">
                <Setter Property="Content" Value="ダウンロード"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Downloading}">
                <Setter Property="Content" Value="中止"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Aborted}">
                <Setter Property="Content" Value="ダウンロード"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding State}" Value="{x:Static wpf:UpdaterViewModel+UpdateActionState.Downloaded}">
                <Setter Property="Content" Value="終了してインストール"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </Button.Style>
      </Button>
      <Button Grid.Column="3" Content="閉じる" Click="Button_Click"/>
    </Grid>
  </Grid>
</Window>
